version: "3.9"

services:
  service-registry:
    container_name: service-registry
    build:
      context: service_registry/
      dockerfile: Dockerfile
    image: service-registry:latest
    ports:
      - 8761:8761

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'productsdb'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql

  microservice1:
    build:
      context: shoppingApp/
      dockerfile: Dockerfile
    command: bash -c "python shoppingApp/manage.py makemigrations && python shoppingApp/manage.py migrate && python shoppingApp/manage.py createsuperuser && python shoppingApp/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/ProductCatCode
    ports:
      - "8000:8000"
    depends_on:
      - db
      - service-registry

  sidecar-product-catalog:
    container_name: sidecar-product-catalog
    build:
      context: sidecar/
      dockerfile: Dockerfile
    image: sidecar-product-catalog
    ports:
      - 5678:5678
    depends_on:
      - microservice1

  fe:
    container_name: fe
    build:
      context: shopping_app_fe/
      dockerfile: Dockerfile
    volumes:
      - '.:/shopping_app_fe/app'
      - '/shopping_app_fe/app/node_modules'
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true

  api-gw:
     container_name: api-gw
     build:
        context: apigw/
        dockerfile: Dockerfile
     image: message-server:latest
     ports:
        - 8080:8080
     networks:
        - spring-cloud-network
     depends_on:
        - service-registry

volumes:
  my-db:

networks:
    spring-cloud-network:
        driver: bridge